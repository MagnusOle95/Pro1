package bagopgave;public class ArrayBag<T> implements Bag<T> {    private T[] elementer;    private int currentSize;    public ArrayBag(){        this.elementer = (T[]) new Object[10];        this.currentSize = 0;    }    @Override    public int getCurrentSize() {        return this.currentSize;    }    @Override    public boolean isFull() {        return currentSize == elementer.length;    }    @Override    public boolean isEmpty() {        return currentSize == 0;    }    @Override    public boolean add(T newEntry) {        boolean succes = false;        if (!isFull()) {            elementer[currentSize] = newEntry;            succes = true;            currentSize++;        }        return succes;    }    @Override    public T remove()    {        return null;    }    @Override    public boolean remove(T anEntry)    {        return false;    }    @Override    public void clear()    {    }    @Override    public int getFrequencyOf(T anEntry)    {        return 0;    }    @Override    public boolean contains(T anEntry)    {        return false;    }    @Override    public T[] toArray()    {        return null;    }}